{"version":3,"sources":["../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/grid-layer.js","../node_modules/react-leaflet/esm/TileLayer.js","../node_modules/react-leaflet/esm/LayersControl.js","pages/multiple-tile-layers.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js"],"names":["createContainerComponent","useElement","ContainerComponent","props","ref","current","instance","context","useImperativeHandle","children","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","useState","isOpen","setOpen","useEffect","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","createControlComponent","createInstance","createElementHook","useControl","createControlHook","createLayerComponent","updateElement","useLayer","createLayerHook","createOverlayComponent","useLifecycle","useOverlay","createDivOverlayHook","createPathComponent","usePath","createPathHook","createTileLayerComponent","usePathOptions","element","optionsRef","useRef","pathOptions","options","setStyle","useLeafletContext","elementRef","withPane","useEventHandlers","eventHandlers","useLayerLifecycle","positionRef","position","addTo","map","remove","setPosition","useAttribution","attribution","propsRef","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","TileLayer","url","LeafletTileLayer","useLayersControlElement","ctx","Control","Layers","undefined","layersControl","control","collapsed","collapse","expand","useLayersControl","LayersControl","createControlledLayer","addLayerToControl","parentContext","setLayer","addLayer","useCallback","layerToAdd","checked","name","removeLayer","layerToRemove","useMemo","layerContainer","BaseLayer","addBaseLayer","Overlay","addOverlay","center","layers","MapWrapper","zoom","scrollWheelZoom","index","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","pane","eventHandlersRef","on","off","_context$layerContain","attributionRef","attributionControl","removeAttribution","addAttribution"],"mappings":"wQAGO,SAASA,EAAyBC,GACvC,SAASC,EAAmBC,EAAOC,GACjC,MAGIH,EAAWE,GAAOE,QAFpBC,EADF,EACEA,SACAC,EAFF,EAEEA,QAGF,OADAC,8BAAoBJ,GAAK,kBAAME,KACN,MAAlBH,EAAMM,SAAmB,KAAoBC,IAAMC,cAAcC,IAAiB,CACvFC,MAAON,GACNJ,EAAMM,UAGX,OAAoBK,qBAAWZ,GAE1B,SAASa,EAA0Bd,GACxC,SAASe,EAAiBb,EAAOC,GAC/B,MAA0Ba,oBAAS,GAAnC,mBAAOC,EAAP,KAAeC,EAAf,KAEEb,EACEL,EAAWE,EAAOgB,GAASd,QAD7BC,SAEFE,8BAAoBJ,GAAK,kBAAME,KAC/Bc,qBAAU,WACJF,GACFZ,EAASe,WAEV,CAACf,EAAUY,EAAQf,EAAMM,WAE5B,IAAMa,EAAchB,EAASiB,aAC7B,OAAOD,EAA2BE,uBAAarB,EAAMM,SAAUa,GAAe,KAGhF,OAAoBR,qBAAWE,GAE1B,SAASS,EAAoBxB,GAClC,SAASyB,EAAcvB,EAAOC,GAC5B,IACEE,EACEL,EAAWE,GAAOE,QADpBC,SAGF,OADAE,8BAAoBJ,GAAK,kBAAME,KACxB,KAGT,OAAoBQ,qBAAWY,K,iCC7CjC,mOAMO,SAASC,EAAuBC,GAQrC,IAAM3B,EAAa4B,aAPnB,SAAuB1B,EAAOI,GAC5B,MAAO,CACLD,SAAUsB,EAAezB,GACzBI,cAKEuB,EAAaC,YAAkB9B,GACrC,OAAOwB,YAAoBK,GAEtB,SAASE,EAAqBrB,EAAesB,GAClD,IAAMhC,EAAa4B,YAAkBlB,EAAesB,GAC9CC,EAAWC,YAAgBlC,GACjC,OAAOD,YAAyBkC,GAE3B,SAASE,EAAuBzB,EAAe0B,GACpD,IAAMpC,EAAa4B,YAAkBlB,GAC/B2B,EAAaC,YAAqBtC,EAAYoC,GACpD,OAAOtB,YAA0BuB,GAE5B,SAASE,EAAoB7B,EAAesB,GACjD,IAAMhC,EAAa4B,YAAkBlB,EAAesB,GAC9CQ,EAAUC,YAAezC,GAC/B,OAAOD,YAAyByC,GAE3B,SAASE,EAAyBhC,EAAesB,GACtD,IAAMhC,EAAa4B,YAAkBlB,EAAesB,GAC9CC,EAAWC,YAAgBlC,GACjC,OAAOwB,YAAoBS,K,iCCpC7B,+GAKO,SAASU,EAAeC,EAAS1C,GACtC,IAAM2C,EAAaC,mBACnB3B,qBAAU,WACR,GAAIjB,EAAM6C,cAAgBF,EAAWzC,QAAS,OACtC4C,EAAO,UAAG9C,EAAM6C,mBAAT,QAAwB,GACrCH,EAAQvC,SAAS4C,SAASD,GAC1BH,EAAWzC,QAAU4C,KAEtB,CAACJ,EAAS1C,IAER,SAASuC,EAAezC,GAC7B,OAAO,SAAiBE,GACtB,IAAMI,EAAU4C,cACVC,EAAanD,EAAWoD,YAASlD,EAAOI,GAAUA,GAIxD,OAHA+C,YAAiBF,EAAW/C,QAASF,EAAMoD,eAC3CC,YAAkBJ,EAAW/C,QAASE,GACtCqC,EAAeQ,EAAW/C,QAASF,GAC5BiD,K,iCCtBX,qDAEO,SAASrB,EAAkB9B,GAChC,OAAO,SAA2BE,GAChC,IAAMI,EAAU4C,cACVC,EAAanD,EAAWE,EAAOI,GAEnCD,EACE8C,EAAW/C,QADbC,SAEImD,EAAcV,iBAAO5C,EAAMuD,UAE/BA,EACEvD,EADFuD,SAcF,OAZAtC,qBAAU,WAER,OADAd,EAASqD,MAAMpD,EAAQqD,KAChB,WACLtD,EAASuD,YAEV,CAACtD,EAAQqD,IAAKtD,IACjBc,qBAAU,WACQ,MAAZsC,GAAoBA,IAAaD,EAAYpD,UAC/CC,EAASwD,YAAYJ,GACrBD,EAAYpD,QAAUqD,KAEvB,CAACpD,EAAUoD,IACPN,K,iCCzBX,sEAIO,SAASb,EAAqBtC,EAAYoC,GAC/C,OAAO,SAAuBlC,EAAOgB,GACnC,IAAMZ,EAAU4C,cACVC,EAAanD,EAAWoD,YAASlD,EAAOI,GAAUA,GAIxD,OAHAwD,YAAexD,EAAQqD,IAAKzD,EAAM6D,aAClCV,YAAiBF,EAAW/C,QAASF,EAAMoD,eAC3ClB,EAAae,EAAW/C,QAASE,EAASJ,EAAOgB,GAC1CiC,K,iCCXX,6CACO,SAASvB,EAAkBlB,EAAesB,GAC/C,OAAqB,MAAjBA,EACK,SAAoC9B,EAAOI,GAChD,OAAOwC,iBAAOpC,EAAcR,EAAOI,KAIhC,SAAkCJ,EAAOI,GAC9C,IAAM6C,EAAaL,iBAAOpC,EAAcR,EAAOI,IACzC0D,EAAWlB,iBAAO5C,GAEtBG,EACE8C,EAAW/C,QADbC,SAQF,OANAc,qBAAU,WACJ6C,EAAS5D,UAAYF,IACvB8B,EAAc3B,EAAUH,EAAO8D,EAAS5D,SACxC4D,EAAS5D,QAAUF,KAEpB,CAACG,EAAUH,EAAOI,IACd6C,K,iCCpBJ,SAASc,EAAgBC,EAAOhE,EAAOiE,GAC5C,IACEC,EAEElE,EAFFkE,QACAC,EACEnE,EADFmE,OAGa,MAAXD,GAAmBA,IAAYD,EAAUC,SAC3CF,EAAMI,WAAWF,GAGL,MAAVC,GAAkBA,IAAWF,EAAUE,QACzCH,EAAMK,UAAUF,GAXpB,mC,2HCEaG,EAAY9B,aAAyB,WAG/CpC,GAAS,IAFVmE,EAEU,EAFVA,IACGzB,EACO,iBACV,MAAO,CACL3C,SAAU,IAAIqE,YAAiBD,EAAKrB,YAASJ,EAAS1C,IACtDA,aAED2D,M,wKCPUU,EAA0B/C,aAAkB,WAGtDgD,GAAK,EAFNpE,SAEM,IADHwC,EACG,iBACA3C,EAAW,IAAIwE,UAAQC,YAAOC,OAAWA,EAAW/B,GAC1D,MAAO,CACL3C,WACAC,QAAS,2BAAKsE,GAAP,IACLI,cAAe3E,QAGlB,SAA6B4E,EAAS/E,EAAOiE,GAC1CjE,EAAMgF,YAAcf,EAAUe,aACR,IAApBhF,EAAMgF,UACRD,EAAQE,WAERF,EAAQG,aAIDC,EAAmBvD,YAAkB6C,GAErCW,EAAgBvF,YAAyBsF,GAC/C,SAASE,EAAsBC,GACpC,OAAO,SAAyBtF,GAC9B,IAAMuF,EAAgBvC,cAChBc,EAAWlB,iBAAO5C,GACxB,EAA0Bc,mBAAS,MAAnC,mBAAOkD,EAAP,KAAcwB,EAAd,KAEEV,EAEES,EAFFT,cACArB,EACE8B,EADF9B,IAEIgC,EAAWC,uBAAY,SAAAC,GACN,MAAjBb,IACEhB,EAAS5D,QAAQ0F,SACnBnC,EAAIgC,SAASE,GAGfL,EAAkBR,EAAea,EAAY7B,EAAS5D,QAAQ2F,MAC9DL,EAASG,MAEV,CAACb,EAAerB,IACbqC,EAAcJ,uBAAY,SAAAK,GACb,MAAjBjB,GAAiCA,EAAcgB,YAAYC,GAC3DP,EAAS,QACR,CAACV,IACE1E,EAAU4F,mBAAQ,8BAAC,eAAWT,GAAZ,IACtBU,eAAgB,CACdR,WACAK,mBAEA,CAACP,EAAeE,EAAUK,IAY9B,OAXA7E,qBAAU,WACM,OAAV+C,GAAkBF,EAAS5D,UAAYF,KACnB,IAAlBA,EAAM4F,SAAiD,MAA5B9B,EAAS5D,QAAQ0F,UAAgD,IAA7B9B,EAAS5D,QAAQ0F,SAE5C,IAA7B9B,EAAS5D,QAAQ0F,SAAsC,MAAjB5F,EAAM4F,UAAqC,IAAlB5F,EAAM4F,SAC9EnC,EAAIqC,YAAY9B,GAFhBP,EAAIgC,SAASzB,GAKfF,EAAS5D,QAAUF,MAGhBA,EAAMM,SAAwBC,IAAMC,cAAcC,IAAiB,CACxEC,MAAON,GACNJ,EAAMM,UAAY,MAGzB8E,EAAcc,UAAYb,GAAsB,SAAsBP,EAAed,EAAO6B,GAC1Ff,EAAcqB,aAAanC,EAAO6B,MAEpCT,EAAcgB,QAAUf,GAAsB,SAAoBP,EAAed,EAAO6B,GACtFf,EAAcuB,WAAWrC,EAAO6B,O,gCC3ElC,6CAEMS,EAAS,CAAC,SAAU,UAEpBC,EAAS,CACb,CACEV,KAAM,aACNhC,YAAa,4FACbU,IAAK,qDAEP,CACEsB,KAAM,UACNhC,YAAa,4EACbU,IAAK,2EAgCMiC,UA5BI,WAGjB,OACE,cAAC,IAAD,CAAcF,OAAQA,EAAQG,KAAM,GAAIC,iBAAiB,EAAzD,SAEE,cAAC,IAAD,CAAenD,SAAS,WAAxB,SAEGgD,EAAO9C,KAAI,SAACO,EAAO2C,GAClB,OACE,cAAC,IAAcT,UAAf,CAEEN,QAAmB,IAAVe,EACTd,KAAM7B,EAAM6B,KAHd,SAKE,cAAC,IAAD,CACEhC,YAAaG,EAAMH,YACnBU,IAAKP,EAAMO,OANRoC,Y,gCC5BJ,SAASC,EAAgBC,EAAKC,EAAKpG,GAYhD,OAXIoG,KAAOD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9BpG,MAAOA,EACPuG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOpG,EAGNmG,ECVT,SAASO,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUvB,GAC9C,EAAekB,EAAQlB,EAAKsB,EAAOtB,OAE5BC,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUvB,GACxCC,OAAOC,eAAegB,EAAQlB,EAAKC,OAAOa,yBAAyBQ,EAAQtB,OAKjF,OAAOkB,E,iHCjCF,SAAS9E,EAASlD,EAAOI,GAAS,MACjCoI,EAAI,UAAGxI,EAAMwI,YAAT,QAAiBpI,EAAQoI,KACnC,OAAOA,EAAO,2BAAKxI,GAAR,IACTwI,SACExI,I,gCCJN,6CACO,SAASmD,EAAiBT,EAASU,GACxC,IAAMqF,EAAmB7F,mBACzB3B,qBAAU,WAMR,OALqB,MAAjBmC,GACFV,EAAQvC,SAASuI,GAAGtF,GAGtBqF,EAAiBvI,QAAUkD,EACpB,WAC2B,MAA5BqF,EAAiBvI,SACnBwC,EAAQvC,SAASwI,IAAIF,EAAiBvI,SAGxCuI,EAAiBvI,QAAU,QAE5B,CAACwC,EAASU,M,gCChBf,+GAKO,SAASC,EAAkBX,EAAStC,GACzCa,qBAAU,WAAoB,MAG5B,OAFe,UAAGb,EAAQ6F,sBAAX,QAA6B7F,EAAQqD,KAC1CgC,SAAS/C,EAAQvC,UACpB,WACL,IAAIyI,EAEgD,OAAnDA,EAAwBxI,EAAQ6F,iBAAmC2C,EAAsB9C,YAAYpD,EAAQvC,UAC9GC,EAAQqD,IAAIqC,YAAYpD,EAAQvC,aAEjC,CAACC,EAASsC,IAER,SAASV,EAAgBlC,GAC9B,OAAO,SAAkBE,GACvB,IAAMI,EAAU4C,cACVC,EAAanD,EAAWoD,YAASlD,EAAOI,GAAUA,GAIxD,OAHAwD,YAAexD,EAAQqD,IAAKzD,EAAM6D,aAClCV,YAAiBF,EAAW/C,QAASF,EAAMoD,eAC3CC,EAAkBJ,EAAW/C,QAASE,GAC/B6C,K,gCCxBX,6CACO,SAASW,EAAeH,EAAKI,GAClC,IAAMgF,EAAiBjG,iBAAOiB,GAC9B5C,qBAAU,WACJ4C,IAAgBgF,EAAe3I,SAAqC,MAA1BuD,EAAIqF,qBAClB,MAA1BD,EAAe3I,SACjBuD,EAAIqF,mBAAmBC,kBAAkBF,EAAe3I,SAGvC,MAAf2D,GACFJ,EAAIqF,mBAAmBE,eAAenF,IAI1CgF,EAAe3I,QAAU2D,IACxB,CAACJ,EAAKI","file":"static/js/multiple-tile-layers-js.cf0019a6.chunk.js","sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","import { LeafletProvider, createContainerComponent, createControlHook, createElementHook, useLeafletContext } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nexport const useLayersControlElement = createElementHook(function createLayersControl({\n  children: _c,\n  ...options\n}, ctx) {\n  const instance = new Control.Layers(undefined, undefined, options);\n  return {\n    instance,\n    context: { ...ctx,\n      layersControl: instance\n    }\n  };\n}, function updateLayersControl(control, props, prevProps) {\n  if (props.collapsed !== prevProps.collapsed) {\n    if (props.collapsed === true) {\n      control.collapse();\n    } else {\n      control.expand();\n    }\n  }\n});\nexport const useLayersControl = createControlHook(useLayersControlElement);\n// @ts-ignore\nexport const LayersControl = createContainerComponent(useLayersControl);\nexport function createControlledLayer(addLayerToControl) {\n  return function ControlledLayer(props) {\n    const parentContext = useLeafletContext();\n    const propsRef = useRef(props);\n    const [layer, setLayer] = useState(null);\n    const {\n      layersControl,\n      map\n    } = parentContext;\n    const addLayer = useCallback(layerToAdd => {\n      if (layersControl != null) {\n        if (propsRef.current.checked) {\n          map.addLayer(layerToAdd);\n        }\n\n        addLayerToControl(layersControl, layerToAdd, propsRef.current.name);\n        setLayer(layerToAdd);\n      }\n    }, [layersControl, map]);\n    const removeLayer = useCallback(layerToRemove => {\n      layersControl == null ? void 0 : layersControl.removeLayer(layerToRemove);\n      setLayer(null);\n    }, [layersControl]);\n    const context = useMemo(() => ({ ...parentContext,\n      layerContainer: {\n        addLayer,\n        removeLayer\n      }\n    }), [parentContext, addLayer, removeLayer]);\n    useEffect(() => {\n      if (layer !== null && propsRef.current !== props) {\n        if (props.checked === true && (propsRef.current.checked == null || propsRef.current.checked === false)) {\n          map.addLayer(layer);\n        } else if (propsRef.current.checked === true && (props.checked == null || props.checked === false)) {\n          map.removeLayer(layer);\n        }\n\n        propsRef.current = props;\n      }\n    });\n    return props.children ? /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children) : null;\n  };\n}\nLayersControl.BaseLayer = createControlledLayer(function addBaseLayer(layersControl, layer, name) {\n  layersControl.addBaseLayer(layer, name);\n});\nLayersControl.Overlay = createControlledLayer(function addOverlay(layersControl, layer, name) {\n  layersControl.addOverlay(layer, name);\n});","import { MapContainer, TileLayer, LayersControl } from 'react-leaflet';\n\nconst center = [52.22977, 21.01178];\n\nconst layers = [\n  {\n    name: \"Osm Mapnik\",\n    attribution: '&copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a>OpenStreetMap</a> contributors',\n    url: 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n  },\n  {\n    name: \"CartoDB\",\n    attribution: '&copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a> contributors',\n    url: 'https://{s}.basemaps.cartocdn.com/rastertiles/dark_all/{z}/{x}/{y}.png'\n  }\n]\n\nconst MapWrapper = () => {\n\n\n  return (\n    <MapContainer center={center} zoom={13} scrollWheelZoom={false}>\n\n      <LayersControl position=\"topright\">\n\n        {layers.map((layer, index) => {\n          return (\n            <LayersControl.BaseLayer\n              key={index}\n              checked={index === 0 ? true : false}\n              name={layer.name}\n            >\n              <TileLayer\n                attribution={layer.attribution}\n                url={layer.url}\n              />\n            </LayersControl.BaseLayer>\n          )\n        })}\n\n      </LayersControl>\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}"],"sourceRoot":""}