{"version":3,"sources":["pages/adding-one-marker.js","util/tileLayer.js","../node_modules/react-leaflet/esm/Popup.js","../node_modules/react-leaflet/esm/Marker.js"],"names":["center","MapWrapper","zoom","scrollWheelZoom","tileLayer","position","url","Popup","createOverlayComponent","props","context","instance","LeafletPopup","overlayContainer","element","setOpen","onClose","onOpen","useEffect","onPopupOpen","event","popup","update","onPopupClose","map","on","popupopen","popupclose","setLatLng","openOn","bindPopup","_context$overlayConta","off","unbindPopup","removeLayer","Marker","createLayerComponent","ctx","options","LeafletMarker","marker","prevProps","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable"],"mappings":"yLAGMA,EAAS,CAAC,SAAU,UAeXC,UAbI,WACjB,OACE,eAAC,IAAD,CAAcD,OAAQA,EAAQE,KAAM,GAAIC,iBAAiB,EAAzD,UACE,cAAC,IAAD,eAAeC,MAEf,cAAC,IAAD,CAAQC,SAAUL,EAAlB,SACE,cAAC,IAAD,mC,gCCXR,MAOeI,IALG,CAEhBE,IAAK,kD,gCCJP,8DAGaC,EAAQC,aAAuB,SAAqBC,EAAOC,GACtE,MAAO,CACLC,SAAU,IAAIC,QAAaH,EAAOC,EAAQG,kBAC1CH,cAED,SAA2BI,EAASJ,EAASD,EAAOM,GACrD,IACEC,EAGEP,EAHFO,QACAC,EAEER,EAFFQ,OACAZ,EACEI,EADFJ,SAEFa,qBAAU,WACR,IACEP,EACEG,EADFH,SAGF,SAASQ,EAAYC,GACfA,EAAMC,QAAUV,IAClBA,EAASW,SACTP,GAAQ,GACE,MAAVE,GAA0BA,KAI9B,SAASM,EAAaH,GAChBA,EAAMC,QAAUV,IAClBI,GAAQ,GACG,MAAXC,GAA2BA,KAqB/B,OAjBAN,EAAQc,IAAIC,GAAG,CACbC,UAAWP,EACXQ,WAAYJ,IAGkB,MAA5Bb,EAAQG,kBAEM,MAAZR,GACFM,EAASiB,UAAUvB,GAGrBM,EAASkB,OAAOnB,EAAQc,MAGxBd,EAAQG,iBAAiBiB,UAAUnB,GAG9B,WACL,IAAIoB,EAEJrB,EAAQc,IAAIQ,IAAI,CACdN,UAAWP,EACXQ,WAAYJ,IAEwC,OAArDQ,EAAwBrB,EAAQG,mBAAqCkB,EAAsBE,cAC5FvB,EAAQc,IAAIU,YAAYvB,MAEzB,CAACG,EAASJ,EAASK,EAASC,EAASC,EAAQZ,Q,sHC3DrC8B,EAASC,aAAqB,WAGxCC,GAAK,IAFNhC,EAEM,EAFNA,SACGiC,EACG,iBACA3B,EAAW,IAAI4B,SAAclC,EAAUiC,GAC7C,MAAO,CACL3B,WACAD,QAAS,2BAAK2B,GAAP,IACLxB,iBAAkBF,QAGrB,SAAsB6B,EAAQ/B,EAAOgC,GAClChC,EAAMJ,WAAaoC,EAAUpC,UAC/BmC,EAAOZ,UAAUnB,EAAMJ,UAGP,MAAdI,EAAMiC,MAAgBjC,EAAMiC,OAASD,EAAUC,MACjDF,EAAOG,QAAQlC,EAAMiC,MAGG,MAAtBjC,EAAMmC,cAAwBnC,EAAMmC,eAAiBH,EAAUG,cACjEJ,EAAOK,gBAAgBpC,EAAMmC,cAGV,MAAjBnC,EAAMqC,SAAmBrC,EAAMqC,UAAYL,EAAUK,SACvDN,EAAOO,WAAWtC,EAAMqC,SAGH,MAAnBN,EAAOQ,UAAoBvC,EAAMwC,YAAcR,EAAUQ,aACnC,IAApBxC,EAAMwC,UACRT,EAAOQ,SAASE,SAEhBV,EAAOQ,SAASG","file":"static/js/adding-one-marker-js.47f9fbf9.chunk.js","sourcesContent":["import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer center={center} zoom={18} scrollWheelZoom={false}>\n      <TileLayer {...tileLayer} />\n\n      <Marker position={center}>\n        <Popup>Center Warsaw</Popup>\n      </Marker>\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","import VectorTileLayer from 'react-leaflet-vector-tile-layer';\n\nconst tileLayer = {\n  //attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: \"http://localhost:8080/data/v3/{z}/{x}/{y}.pbf\"\n}\n\nexport default tileLayer;\n\n\n","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({\n  position,\n  ...options\n}, ctx) {\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});"],"sourceRoot":""}