{"version":3,"sources":["../node_modules/@react-leaflet/core/esm/component.js","../node_modules/@react-leaflet/core/esm/generic.js","../node_modules/@react-leaflet/core/esm/path.js","../node_modules/react-leaflet/esm/hooks.js","../node_modules/@react-leaflet/core/esm/control.js","../node_modules/@react-leaflet/core/esm/div-overlay.js","../node_modules/@react-leaflet/core/esm/element.js","../node_modules/@react-leaflet/core/esm/media-overlay.js","../node_modules/react-leaflet/esm/ImageOverlay.js","pages/image-instead-of-map.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-leaflet/core/esm/pane.js","../node_modules/@react-leaflet/core/esm/events.js","../node_modules/@react-leaflet/core/esm/layer.js","../node_modules/@react-leaflet/core/esm/attribution.js"],"names":["createContainerComponent","useElement","ContainerComponent","props","ref","current","instance","context","useImperativeHandle","children","React","createElement","LeafletProvider","value","forwardRef","createDivOverlayComponent","OverlayComponent","useState","isOpen","setOpen","useEffect","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","createControlComponent","createInstance","createElementHook","useControl","createControlHook","createLayerComponent","updateElement","useLayer","createLayerHook","createOverlayComponent","useLifecycle","useOverlay","createDivOverlayHook","createPathComponent","usePath","createPathHook","createTileLayerComponent","usePathOptions","element","optionsRef","useRef","pathOptions","options","setStyle","useLeafletContext","elementRef","withPane","useEventHandlers","eventHandlers","useLayerLifecycle","useMap","map","useMapEvent","type","handler","on","off","positionRef","position","addTo","remove","setPosition","useAttribution","attribution","propsRef","updateMediaOverlay","overlay","prevProps","bounds","LatLngBounds","setBounds","opacity","setOpacity","zIndex","setZIndex","ImageOverlay","ctx","url","LeafletImageOverlay","overlayContainer","setUrl","imageBounds","OverlayImage","fitBounds","transparent","MapWrapper","crs","CRS","Simple","maxZoom","minZoom","scrollWheelZoom","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","pane","eventHandlersRef","layerContainer","addLayer","_context$layerContain","removeLayer","attributionRef","attributionControl","removeAttribution","addAttribution"],"mappings":"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","file":"static/js/image-instead-of-map-js.b5d3063c.chunk.js","sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { LatLngBounds } from 'leaflet';\nexport function updateMediaOverlay(overlay, props, prevProps) {\n  if (props.bounds instanceof LatLngBounds && props.bounds !== prevProps.bounds) {\n    overlay.setBounds(props.bounds);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    overlay.setOpacity(props.opacity);\n  }\n\n  if (props.zIndex != null && props.zIndex !== prevProps.zIndex) {\n    // @ts-ignore missing in definition but inherited from ImageOverlay\n    overlay.setZIndex(props.zIndex);\n  }\n}","import { createLayerComponent, updateMediaOverlay } from '@react-leaflet/core';\nimport { ImageOverlay as LeafletImageOverlay } from 'leaflet';\nexport const ImageOverlay = createLayerComponent(function createImageOveraly({\n  bounds,\n  url,\n  ...options\n}, ctx) {\n  const instance = new LeafletImageOverlay(url, bounds, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateImageOverlay(overlay, props, prevProps) {\n  updateMediaOverlay(overlay, props, prevProps);\n\n  if (props.url !== prevProps.url) {\n    overlay.setUrl(props.url);\n  }\n});","import { CRS } from 'leaflet';\nimport { MapContainer, ImageOverlay, useMap } from 'react-leaflet';\n\nlet imageBounds = [\n  [50, 50], // padding\n  [847, 1280], // image dimensions\n];\n\nconst OverlayImage = () => {\n  const map = useMap();\n\n  map.fitBounds(imageBounds);\n\n  return (\n    <ImageOverlay\n      bounds={imageBounds}\n      url={'https://tomik23.github.io/leaflet-examples/static/factory_UML.png'}\n      transparent={true}\n    />\n  );\n}\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer\n      crs={CRS.Simple}\n      maxZoom={1}\n      minZoom={-4}\n      scrollWheelZoom={false}>\n\n      <OverlayImage />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}"],"sourceRoot":""}