{"version":3,"sources":["../node_modules/react-leaflet/esm/GeoJSON.js","pages/geoJson-extended-action.js","util/tileLayer.js"],"names":["GeoJSON","createPathComponent","ctx","data","options","instance","LeafletGeoJSON","context","overlayContainer","layer","props","prevProps","style","resetStyle","setStyle","center","onEachFeature","feature","on","e","properties","nazwa","bindPopup","getVoivodeshipName","this","openPopup","fillColor","weight","color","fillOpacity","closePopup","MapWrapper","useState","map","setMap","useEffect","legend","L","control","position","onAdd","div","DomUtil","create","innerHTML","addTo","whenCreated","zoom","scrollWheelZoom","tileLayer","geojson","url"],"mappings":"yMAEaA,EAAUC,aAAoB,WAGxCC,GAAK,IAFNC,EAEM,EAFNA,KACGC,EACG,iBACAC,EAAW,IAAIC,UAAeH,EAAMC,GAC1C,MAAO,CACLC,WACAE,QAAS,2BAAKL,GAAP,IACLM,iBAAkBH,QAGrB,SAAuBI,EAAOC,EAAOC,GAClCD,EAAME,QAAUD,EAAUC,QACT,MAAfF,EAAME,MACRH,EAAMI,aAENJ,EAAMK,SAASJ,EAAME,Y,gugJCZrBG,EAAS,CAAC,GAAI,MAQpB,SAASC,EAAcC,EAASR,GAC9BA,EAAMS,GAAG,aAAa,SAAUC,IAPlC,SAA4BF,EAASR,GAC/BQ,EAAQG,YAAcH,EAAQG,WAAWC,OAC3CZ,EAAMa,UAAUL,EAAQG,WAAWC,OAOnCE,CAAmBN,EAASR,GAE5Be,KAAKC,YAGLD,KAAKV,SAAS,CACZY,UAAW,UACXC,OAAQ,EACRC,MAAO,UACPC,YAAa,QAGjBpB,EAAMS,GAAG,YAAY,WACnBM,KAAKM,aAELN,KAAKV,SAAS,CACZY,UAAW,UACXC,OAAQ,EACRC,MAAO,UACPC,YAAa,QAuCJE,UAlCI,WACjB,MAAsBC,mBAAS,MAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAiBA,OAfAC,qBAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAASC,IAAEC,QAAQ,CAAEC,SAAU,eAErCH,EAAOI,MAAQ,WACb,IAAMC,EAAMJ,IAAEK,QAAQC,OAAO,MAAO,UAEpC,OADAF,EAAIG,UAAJ,yBACOH,GAGTL,EAAOS,MAAMZ,MAEZ,CAACA,IAGF,eAAC,IAAD,CACEa,YAAaZ,EACbnB,OAAQA,EACRgC,KAAM,EACNC,iBAAiB,EAJnB,UAOE,cAAC,IAAD,eAAeC,MAEf,cAAC,IAAD,CAAS9C,KAAM+C,EAASlC,cAAeA,S,gCCrE7C,MAOeiC,IALG,CAEhBE,IAAK","file":"static/js/geoJson-extended-action-js.5429c958.chunk.js","sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON({\n  data,\n  ...options\n}, ctx) {\n  const instance = new LeafletGeoJSON(data, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateGeoJSON(layer, props, prevProps) {\n  if (props.style !== prevProps.style) {\n    if (props.style == null) {\n      layer.resetStyle();\n    } else {\n      layer.setStyle(props.style);\n    }\n  }\n});","import { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport L from 'leaflet';\nimport geojson from '../data/wojewodztwa-medium.geojson.json'\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52, 19.2];\n\nfunction getVoivodeshipName(feature, layer) {\n  if (feature.properties && feature.properties.nazwa) {\n    layer.bindPopup(feature.properties.nazwa);\n  }\n}\n\nfunction onEachFeature(feature, layer) {\n  layer.on('mouseover', function (e) {\n\n    getVoivodeshipName(feature, layer);\n\n    this.openPopup();\n\n    // style\n    this.setStyle({\n      fillColor: '#eb4034',\n      weight: 2,\n      color: '#eb4034',\n      fillOpacity: 0.7,\n    });\n  });\n  layer.on('mouseout', function () {\n    this.closePopup();\n    // style\n    this.setStyle({\n      fillColor: '#3388ff',\n      weight: 2,\n      color: '#3388ff',\n      fillOpacity: 0.2,\n    });\n  });\n}\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    if (!map) return;\n\n    const legend = L.control({ position: \"bottomleft\" });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"legend\");\n      div.innerHTML = `click/hover on polygon`;\n      return div;\n    };\n\n    legend.addTo(map);\n\n  }, [map]);\n\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={6}\n      scrollWheelZoom={false}\n    >\n\n      <TileLayer {...tileLayer} />\n\n      <GeoJSON data={geojson} onEachFeature={onEachFeature} />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","import VectorTileLayer from 'react-leaflet-vector-tile-layer';\n\nconst tileLayer = {\n  //attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: \"http://localhost:8080/data/v3/{z}/{x}/{y}.pbf\"\n}\n\nexport default tileLayer;\n\n\n"],"sourceRoot":""}