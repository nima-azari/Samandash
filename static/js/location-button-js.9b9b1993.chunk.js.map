{"version":3,"sources":["../node_modules/react-leaflet/esm/hooks.js","pages/location-button.js","util/tileLayer.js"],"names":["useMap","useLeafletContext","map","useMapEvent","type","handler","useEffect","on","off","center","LocationButton","customControl","L","Control","extend","options","position","className","html","style","onAdd","this","_map","button","DomUtil","create","DomEvent","disableClickPropagation","title","innerHTML","setAttribute","_clicked","e","stopPropagation","_checkLocate","_locateMap","locateActive","document","querySelector","locate","classList","contains","removeLocate","stopLocate","onLocationFound","onLocationError","setView","enableHighAccuracy","addCircle","addTo","featureGroup","addMarker","addLegend","FeatureGroup","text","checkIfDescriotnExist","textContent","legend","control","div","textInfo","insertAdjacentHTML","accuracy","latitude","longitude","circle","weight","stroke","fillColor","fillOpacity","marker","icon","divIcon","iconSize","point","popupAnchor","bindPopup","eachLayer","layer","Marker","removeLayer","Circle","addControl","MapWrapper","useState","setMap","whenCreated","zoom","scrollWheelZoom","tileLayer","url"],"mappings":"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","file":"static/js/location-button-js.9b9b1993.chunk.js","sourcesContent":["import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","import { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport tileLayer from \"../util/tileLayer\";\n\nconst center = [52.22977, 21.01178];\n\nconst LocationButton = () => {\n  const map = useMap();\n\n  useEffect(() => {\n    // create custom button\n    const customControl = L.Control.extend({\n      // button position\n      options: {\n        position: \"topleft\",\n        className: \"locate-button leaflet-bar\",\n        html: '<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3A8.994 8.994 0 0 0 13 3.06V1h-2v2.06A8.994 8.994 0 0 0 3.06 11H1v2h2.06A8.994 8.994 0 0 0 11 20.94V23h2v-2.06A8.994 8.994 0 0 0 20.94 13H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/></svg>',\n        style:\n          \"width: 34px; height: 34px; left: 0; margin-top: 0; display: flex; cursor: pointer; justify-content: center; font-size: 2rem;\",\n      },\n\n      // method\n      onAdd: function (map) {\n        this._map = map;\n        const button = L.DomUtil.create(\"div\");\n        L.DomEvent.disableClickPropagation(button);\n\n        button.title = \"locate\";\n        button.innerHTML = this.options.html;\n        button.className = this.options.className;\n        button.setAttribute(\"style\", this.options.style);\n\n        L.DomEvent.on(button, \"click\", this._clicked, this);\n\n        return button;\n      },\n      _clicked: function (e) {\n        L.DomEvent.stopPropagation(e);\n\n        // this.removeLocate();\n\n        this._checkLocate();\n\n        return;\n      },\n      _checkLocate: function () {\n        return this._locateMap();\n      },\n\n      _locateMap: function () {\n        const locateActive = document.querySelector(\".locate-button\");\n        const locate = locateActive.classList.contains(\"locate-active\");\n        // add/remove class from locate button\n        locateActive.classList[locate ? \"remove\" : \"add\"](\"locate-active\");\n\n        // remove class from button\n        // and stop watching location\n        if (locate) {\n          this.removeLocate();\n          this._map.stopLocate();\n          return;\n        }\n\n        // location on found\n        this._map.on(\"locationfound\", this.onLocationFound, this);\n        // locataion on error\n        this._map.on(\"locationerror\", this.onLocationError, this);\n\n        // start locate\n        this._map.locate({ setView: true, enableHighAccuracy: true });\n      },\n      onLocationFound: function (e) {\n        // add circle\n        this.addCircle(e).addTo(this.featureGroup()).addTo(map);\n\n        // add marker\n        this.addMarker(e).addTo(this.featureGroup()).addTo(map);\n\n        // add legend\n      },\n      // on location error\n      onLocationError: function (e) {\n        this.addLegend(\"Location access denied.\");\n      },\n      // feature group\n      featureGroup: function () {\n        return new L.FeatureGroup();\n      },\n      // add legend\n      addLegend: function (text) {\n        const checkIfDescriotnExist = document.querySelector(\".description\");\n\n        if (checkIfDescriotnExist) {\n          checkIfDescriotnExist.textContent = text;\n          return;\n        }\n\n        const legend = L.control({ position: \"bottomleft\" });\n\n        legend.onAdd = function () {\n          let div = L.DomUtil.create(\"div\", \"description\");\n          L.DomEvent.disableClickPropagation(div);\n          const textInfo = text;\n          div.insertAdjacentHTML(\"beforeend\", textInfo);\n          return div;\n        };\n        legend.addTo(this._map);\n      },\n      addCircle: function ({ accuracy, latitude, longitude }) {\n        return L.circle([latitude, longitude], accuracy / 2, {\n          className: \"circle-test\",\n          weight: 2,\n          stroke: false,\n          fillColor: \"#136aec\",\n          fillOpacity: 0.15,\n        });\n      },\n      addMarker: function ({ latitude, longitude }) {\n        return L.marker([latitude, longitude], {\n          icon: L.divIcon({\n            className: \"located-animation\",\n            iconSize: L.point(17, 17),\n            popupAnchor: [0, -15],\n          }),\n        }).bindPopup(\"Your are here :)\");\n      },\n      removeLocate: function () {\n        this._map.eachLayer(function (layer) {\n          if (layer instanceof L.Marker) {\n            const { icon } = layer.options;\n            if (icon?.options.className === \"located-animation\") {\n              map.removeLayer(layer);\n            }\n          }\n          if (layer instanceof L.Circle) {\n            if (layer.options.className === \"circle-test\") {\n              map.removeLayer(layer);\n            }\n          }\n        });\n      },\n    });\n\n    // adding new button to map controll\n    map.addControl(new customControl());\n  }, [map]);\n\n  return null;\n};\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null);\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={18}\n      scrollWheelZoom={false}\n    >\n      <TileLayer {...tileLayer} />\n\n      <LocationButton map={map} />\n    </MapContainer>\n  );\n};\n\nexport default MapWrapper;\n","import VectorTileLayer from 'react-leaflet-vector-tile-layer';\n\nconst tileLayer = {\n  //attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: \"http://localhost:8080/data/v3/{z}/{x}/{y}.pbf\"\n}\n\nexport default tileLayer;\n\n\n"],"sourceRoot":""}