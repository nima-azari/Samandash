{"version":3,"sources":["../node_modules/react-leaflet/esm/hooks.js","../node_modules/react-leaflet/esm/LayersControl.js","../node_modules/react-leaflet/esm/FeatureGroup.js","pages/controlling-different-groups-of-markers.js","util/tileLayer.js","../node_modules/react-leaflet/esm/Popup.js","../node_modules/react-leaflet/esm/Marker.js"],"names":["useMap","useLeafletContext","map","useMapEvent","type","handler","useEffect","on","off","useLayersControlElement","createElementHook","ctx","children","options","instance","Control","Layers","undefined","context","layersControl","control","props","prevProps","collapsed","collapse","expand","useLayersControl","createControlHook","LayersControl","createContainerComponent","createControlledLayer","addLayerToControl","parentContext","propsRef","useRef","useState","layer","setLayer","addLayer","useCallback","layerToAdd","current","checked","name","removeLayer","layerToRemove","useMemo","layerContainer","React","createElement","LeafletProvider","value","BaseLayer","addBaseLayer","Overlay","addOverlay","FeatureGroup","createPathComponent","LeafletFeatureGroup","overlayContainer","pointsA","lat","lng","title","pointsB","center","ControllingGroup","overlayadd","e","bounds","L","LatLngBounds","eachLayer","extend","getBounds","isValid","flyToBounds","MapWrapper","zoom","scrollWheelZoom","position","tileLayer","index","url","Popup","createOverlayComponent","LeafletPopup","element","setOpen","onClose","onOpen","onPopupOpen","event","popup","update","onPopupClose","popupopen","popupclose","setLatLng","openOn","bindPopup","_context$overlayConta","unbindPopup","Marker","createLayerComponent","LeafletMarker","marker","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable"],"mappings":"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","file":"static/js/controlling-different-groups-of-markers-js.58e644ed.chunk.js","sourcesContent":["import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","import { LeafletProvider, createContainerComponent, createControlHook, createElementHook, useLeafletContext } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nexport const useLayersControlElement = createElementHook(function createLayersControl({\n  children: _c,\n  ...options\n}, ctx) {\n  const instance = new Control.Layers(undefined, undefined, options);\n  return {\n    instance,\n    context: { ...ctx,\n      layersControl: instance\n    }\n  };\n}, function updateLayersControl(control, props, prevProps) {\n  if (props.collapsed !== prevProps.collapsed) {\n    if (props.collapsed === true) {\n      control.collapse();\n    } else {\n      control.expand();\n    }\n  }\n});\nexport const useLayersControl = createControlHook(useLayersControlElement);\n// @ts-ignore\nexport const LayersControl = createContainerComponent(useLayersControl);\nexport function createControlledLayer(addLayerToControl) {\n  return function ControlledLayer(props) {\n    const parentContext = useLeafletContext();\n    const propsRef = useRef(props);\n    const [layer, setLayer] = useState(null);\n    const {\n      layersControl,\n      map\n    } = parentContext;\n    const addLayer = useCallback(layerToAdd => {\n      if (layersControl != null) {\n        if (propsRef.current.checked) {\n          map.addLayer(layerToAdd);\n        }\n\n        addLayerToControl(layersControl, layerToAdd, propsRef.current.name);\n        setLayer(layerToAdd);\n      }\n    }, [layersControl, map]);\n    const removeLayer = useCallback(layerToRemove => {\n      layersControl == null ? void 0 : layersControl.removeLayer(layerToRemove);\n      setLayer(null);\n    }, [layersControl]);\n    const context = useMemo(() => ({ ...parentContext,\n      layerContainer: {\n        addLayer,\n        removeLayer\n      }\n    }), [parentContext, addLayer, removeLayer]);\n    useEffect(() => {\n      if (layer !== null && propsRef.current !== props) {\n        if (props.checked === true && (propsRef.current.checked == null || propsRef.current.checked === false)) {\n          map.addLayer(layer);\n        } else if (propsRef.current.checked === true && (props.checked == null || props.checked === false)) {\n          map.removeLayer(layer);\n        }\n\n        propsRef.current = props;\n      }\n    });\n    return props.children ? /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children) : null;\n  };\n}\nLayersControl.BaseLayer = createControlledLayer(function addBaseLayer(layersControl, layer, name) {\n  layersControl.addBaseLayer(layer, name);\n});\nLayersControl.Overlay = createControlledLayer(function addOverlay(layersControl, layer, name) {\n  layersControl.addOverlay(layer, name);\n});","import { createPathComponent } from '@react-leaflet/core';\nimport { FeatureGroup as LeafletFeatureGroup } from 'leaflet';\nexport const FeatureGroup = createPathComponent(function createFeatureGroup({\n  children: _c,\n  ...options\n}, ctx) {\n  const instance = new LeafletFeatureGroup([], options);\n  const context = { ...ctx,\n    layerContainer: instance,\n    overlayContainer: instance\n  };\n  return {\n    instance,\n    context\n  };\n});","import {\n  MapContainer,\n  Popup,\n  FeatureGroup,\n  TileLayer,\n  Marker,\n  LayersControl,\n  useMapEvent,\n} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport tileLayer from \"../util/tileLayer\";\n\nconst pointsA = [\n  { lat: 52.230020586193795, lng: 21.01083755493164, title: \"point A1\" },\n  { lat: 52.22924516170657, lng: 21.011320352554325, title: \"point A2\" },\n  { lat: 52.229511304688444, lng: 21.01270973682404, title: \"point A3\" },\n  { lat: 52.23040500771883, lng: 21.012146472930908, title: \"point A4\" },\n];\n\nconst pointsB = [\n  { lat: 52.229314161892106, lng: 21.012055277824405, title: \"point B1\" },\n  { lat: 52.22950144756943, lng: 21.01193726062775, title: \"point B2\" },\n  { lat: 52.22966573260081, lng: 21.011829972267154, title: \"point B3\" },\n  { lat: 52.2298333027065, lng: 21.011744141578678, title: \"point B4\" },\n  { lat: 52.2299680154701, lng: 21.01164758205414, title: \"point B5\" },\n  { lat: 52.23012572745442, lng: 21.011583209037784, title: \"point B6\" },\n  { lat: 52.230276867580336, lng: 21.01143836975098, title: \"point B7\" },\n  { lat: 52.23046414919644, lng: 21.011341810226444, title: \"point B8\" },\n];\n\nconst center = [52.22977, 21.01178];\n\nconst ControllingGroup = () => {\n  const map = useMapEvent({\n    overlayadd(e) {\n      let bounds = new L.LatLngBounds();\n\n      map.eachLayer(function (layer) {\n        if (layer instanceof L.FeatureGroup) {\n          bounds.extend(layer.getBounds());\n        }\n      });\n\n      if (bounds.isValid()) {\n        map.flyToBounds(bounds);\n      }\n    },\n  });\n\n  return null;\n};\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer center={center} zoom={18} scrollWheelZoom={false}>\n      <LayersControl position=\"topright\" collapsed={false}>\n        <TileLayer {...tileLayer} />\n\n        <LayersControl.Overlay name=\"point A\">\n          <FeatureGroup>\n            {pointsA.map(({ lat, lng, title }, index) => (\n              <Marker key={index} position={[lat, lng]}>\n                <Popup>{title}</Popup>\n              </Marker>\n            ))}\n          </FeatureGroup>\n        </LayersControl.Overlay>\n        <LayersControl.Overlay name=\"point B\">\n          <FeatureGroup>\n            {pointsB.map(({ lat, lng, title }, index) => (\n              <Marker key={index} position={[lat, lng]}>\n                <Popup>{title}</Popup>\n              </Marker>\n            ))}\n          </FeatureGroup>\n        </LayersControl.Overlay>\n      </LayersControl>\n\n      <ControllingGroup />\n    </MapContainer>\n  );\n};\n\nexport default MapWrapper;\n","import VectorTileLayer from 'react-leaflet-vector-tile-layer';\n\nconst tileLayer = {\n  //attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: \"http://localhost:8080/data/v3/{z}/{x}/{y}.pbf\"\n}\n\nexport default tileLayer;\n\n\n","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({\n  position,\n  ...options\n}, ctx) {\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});"],"sourceRoot":""}