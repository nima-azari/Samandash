{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/distance-between-two-points.js","util/tileLayer.js","../node_modules/react-leaflet/esm/Popup.js","../node_modules/react-leaflet/esm/Marker.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","center","ShowMarkers","mapContainer","legend","markers","map","marker","index","uniceid","position","draggable","eventHandlers","moveend","e","target","getLatLng","lat","lng","textContent","onClick","eachLayer","layer","options","pane","removeLayer","removeMarker","MyMarkers","useState","setMarker","setLegend","useEffect","L","control","info","DomUtil","create","onAdd","addTo","on","latlng","mar","length","undefined","MapWrapper","setMap","whenCreated","zoom","scrollWheelZoom","tileLayer","url","Popup","createOverlayComponent","props","context","instance","LeafletPopup","overlayContainer","element","setOpen","onClose","onOpen","onPopupOpen","event","popup","update","onPopupClose","popupopen","popupclose","setLatLng","openOn","bindPopup","_context$overlayConta","off","unbindPopup","Marker","createLayerComponent","ctx","LeafletMarker","prevProps","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","enable","disable"],"mappings":"iLAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,4IIAxFC,EAAS,CAAC,SAAU,UAapBC,EAAc,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,OACnC,OADyD,EAAdC,QAC5BC,KAAI,SAACC,EAAQC,GAC1B,OAAO,cAAC,IAAD,CAELC,QAASD,EACTE,SAAUH,EACVI,WAAW,EACXC,cAAe,CACbC,QADa,SACLC,GACN,MAAqBA,EAAEC,OAAOC,YAAtBC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACbd,EAAOe,YAAP,2BAAyCF,EAAzC,YAAgDC,KAR/C,SAYL,cAAC,IAAD,UACE,wBAAQE,QAAS,kBA1BJ,SAACZ,EAAOF,EAAKF,GAChCE,EAAIe,WAAU,SAACC,GACTA,EAAMC,SAAkC,eAAvBD,EAAMC,QAAQC,MAC7BF,EAAMC,QAAQd,UAAYD,IAC5BF,EAAImB,YAAYH,GAChBlB,EAAOe,YAAc,kCAqBEO,CAAalB,EAAOL,EAAcC,IAAzD,2CAZGI,OAkBLmB,EAAY,SAAC,GAAa,IAAXrB,EAAU,EAAVA,IACnB,EAA4BsB,mBAAS,IAArC,mBAAOrB,EAAP,KAAesB,EAAf,KACA,EAA4BD,qBAA5B,mBAAOxB,EAAP,KAAe0B,EAAf,KA0BA,OAxBAC,qBAAU,WACR,GAAKzB,EAAL,CACA,IAAMF,EAAS4B,IAAEC,QAAQ,CAAEvB,SAAU,eAE/BwB,EAAOF,IAAEG,QAAQC,OAAO,MAAO,UAErChC,EAAOiC,MAAQ,WAEb,OADAH,EAAKf,YAAL,mBACOe,GAGT9B,EAAOkC,MAAMhC,GAEbA,EAAIiC,GAAG,SAAS,SAACzB,GACf,MAAqBA,EAAE0B,OAAfvB,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACbW,GAAU,SAAAY,GAAG,4BAAQA,GAAR,CAAa,CAACxB,EAAKC,QAEhCgB,EAAKf,YAAL,sBAAkCL,EAAE0B,QACpCV,EAAUI,SAGX,CAAC5B,IAGGC,EAAOmC,OAAS,QAAgBC,IAAXvC,EAC1B,cAACF,EAAD,CACEC,aAAcG,EACdF,OAAQA,EACRC,QAASE,IAET,MAqBSqC,UAlBI,WACjB,MAAsBhB,mBAAS,MAA/B,mBAAOtB,EAAP,KAAYuC,EAAZ,KACA,OACE,eAAC,IAAD,CACEC,YAAaD,EACb5C,OAAQA,EACR8C,KAAM,GACNC,iBAAiB,EAJnB,UAOE,cAAC,IAAD,eAAeC,MAEf,cAACtB,EAAD,CAAWrB,IAAKA,S,gCCxFtB,MAOe2C,IALG,CAEhBC,IAAK,kD,gCCJP,8DAGaC,EAAQC,aAAuB,SAAqBC,EAAOC,GACtE,MAAO,CACLC,SAAU,IAAIC,QAAaH,EAAOC,EAAQG,kBAC1CH,cAED,SAA2BI,EAASJ,EAASD,EAAOM,GACrD,IACEC,EAGEP,EAHFO,QACAC,EAEER,EAFFQ,OACAnD,EACE2C,EADF3C,SAEFqB,qBAAU,WACR,IACEwB,EACEG,EADFH,SAGF,SAASO,EAAYC,GACfA,EAAMC,QAAUT,IAClBA,EAASU,SACTN,GAAQ,GACE,MAAVE,GAA0BA,KAI9B,SAASK,EAAaH,GAChBA,EAAMC,QAAUT,IAClBI,GAAQ,GACG,MAAXC,GAA2BA,KAqB/B,OAjBAN,EAAQhD,IAAIiC,GAAG,CACb4B,UAAWL,EACXM,WAAYF,IAGkB,MAA5BZ,EAAQG,kBAEM,MAAZ/C,GACF6C,EAASc,UAAU3D,GAGrB6C,EAASe,OAAOhB,EAAQhD,MAGxBgD,EAAQG,iBAAiBc,UAAUhB,GAG9B,WACL,IAAIiB,EAEJlB,EAAQhD,IAAImE,IAAI,CACdN,UAAWL,EACXM,WAAYF,IAEwC,OAArDM,EAAwBlB,EAAQG,mBAAqCe,EAAsBE,cAC5FpB,EAAQhD,IAAImB,YAAY8B,MAEzB,CAACG,EAASJ,EAASK,EAASC,EAASC,EAAQnD,Q,sHC3DrCiE,EAASC,aAAqB,WAGxCC,GAAK,IAFNnE,EAEM,EAFNA,SACGa,EACG,iBACAgC,EAAW,IAAIuB,SAAcpE,EAAUa,GAC7C,MAAO,CACLgC,WACAD,QAAS,2BAAKuB,GAAP,IACLpB,iBAAkBF,QAGrB,SAAsBhD,EAAQ8C,EAAO0B,GAClC1B,EAAM3C,WAAaqE,EAAUrE,UAC/BH,EAAO8D,UAAUhB,EAAM3C,UAGP,MAAd2C,EAAM2B,MAAgB3B,EAAM2B,OAASD,EAAUC,MACjDzE,EAAO0E,QAAQ5B,EAAM2B,MAGG,MAAtB3B,EAAM6B,cAAwB7B,EAAM6B,eAAiBH,EAAUG,cACjE3E,EAAO4E,gBAAgB9B,EAAM6B,cAGV,MAAjB7B,EAAM+B,SAAmB/B,EAAM+B,UAAYL,EAAUK,SACvD7E,EAAO8E,WAAWhC,EAAM+B,SAGH,MAAnB7E,EAAO+E,UAAoBjC,EAAM1C,YAAcoE,EAAUpE,aACnC,IAApB0C,EAAM1C,UACRJ,EAAO+E,SAASC,SAEhBhF,EAAO+E,SAASE","file":"static/js/distance-between-two-points-js.d9b57590.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect } from 'react';\nimport { Marker, MapContainer, TileLayer, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nconst removeMarker = (index, map, legend) => {\n  map.eachLayer((layer) => {\n    if (layer.options && layer.options.pane === \"markerPane\") {\n      if (layer.options.uniceid === index) {\n        map.removeLayer(layer);\n        legend.textContent = 'goodbye marker ðŸ’©';\n      }\n    }\n  });\n}\n\nconst ShowMarkers = ({ mapContainer, legend, markers }) => {\n  return markers.map((marker, index) => {\n    return <Marker\n      key={index}\n      uniceid={index}\n      position={marker}\n      draggable={true}\n      eventHandlers={{\n        moveend(e) {\n          const { lat, lng } = e.target.getLatLng();\n          legend.textContent = `change position: ${lat} ${lng}`;\n        }\n      }}\n    >\n      <Popup>\n        <button onClick={() => removeMarker(index, mapContainer, legend)}>delete marker ðŸ’”</button>\n      </Popup>\n    </Marker>\n  })\n}\n\nconst MyMarkers = ({ map }) => {\n  const [marker, setMarker] = useState([])\n  const [legend, setLegend] = useState()\n\n  useEffect(() => {\n    if (!map) return;\n    const legend = L.control({ position: \"bottomleft\" });\n\n    const info = L.DomUtil.create(\"div\", \"legend\");\n\n    legend.onAdd = () => {\n      info.textContent = `click on the map`;\n      return info;\n    };\n\n    legend.addTo(map);\n\n    map.on('click', (e) => {\n      const { lat, lng } = e.latlng;\n      setMarker(mar => [...mar, [lat, lng]]);\n\n      info.textContent = `new marker: ${e.latlng}`;\n      setLegend(info);\n    })\n\n  }, [map]);\n\n\n  return marker.length > 0 && legend !== undefined ? (\n    <ShowMarkers\n      mapContainer={map}\n      legend={legend}\n      markers={marker} />\n  )\n    : null\n}\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null);\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={18}\n      scrollWheelZoom={false}\n    >\n\n      <TileLayer {...tileLayer} />\n\n      <MyMarkers map={map} />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;\n\n","import VectorTileLayer from 'react-leaflet-vector-tile-layer';\n\nconst tileLayer = {\n  //attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: \"http://localhost:8080/data/v3/{z}/{x}/{y}.pbf\"\n}\n\nexport default tileLayer;\n\n\n","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({\n  position,\n  ...options\n}, ctx) {\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});"],"sourceRoot":""}