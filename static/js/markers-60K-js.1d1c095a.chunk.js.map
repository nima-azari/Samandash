{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/react-leaflet/esm/CircleMarker.js","pages/markers-60K.js","util/tileLayer.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","CircleMarker","createPathComponent","ctx","center","options","children","instance","LeafletCircleMarker","context","overlayContainer","updateCircle","MapWrapper","MapContainer","preferCanvas","className","zoom","TileLayer","tileLayer","spiderfyDistanceMultiplier","showCoverageOnHover","map","_","i","renderer","L","canvas","padding","Math","random","url"],"mappings":"iLAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,iJIHjFC,EAAeC,aAAoB,WAI7CC,GAAK,IAHNC,EAGM,EAHNA,OAEGC,GACG,EAFNC,SAEM,kBACAC,EAAW,IAAIC,eAAoBJ,EAAQC,GACjD,MAAO,CACLE,WACAE,QAAS,2BAAKN,GAAP,IACLO,iBAAkBH,OAGrBI,K,0CCRGP,EAAS,CAAC,SAAU,UAmCXQ,UA7BI,WACjB,OACE,eAACC,EAAA,EAAD,CACEC,cAAc,EACdC,UAAU,oBACVX,OAAQA,EACRY,KAAM,EAJR,UAOE,cAACC,EAAA,EAAD,eAAeC,MAEf,cAAC,IAAD,CACEC,2BAA4B,EAC5BC,qBAAqB,EAFvB,SAKG,YAAI7B,MAAM,MAAQ8B,KAAI,SAACC,EAAGC,GAAJ,OACrB,cAACtB,EAAD,CACEuB,SAAUC,IAAEC,OAAO,CAAEC,QAAS,KAE9BvB,OAvBH,CAAO,IAAMwB,KAAKC,SAAhB,GAAiC,IAAMD,KAAKC,SAAjB,MAsBrBN,a,gCC/BjB,MAOeL,IALG,CAEhBY,IAAK","file":"static/js/markers-60K-js.1d1c095a.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { createPathComponent, updateCircle } from '@react-leaflet/core';\nimport { CircleMarker as LeafletCircleMarker } from 'leaflet';\nexport const CircleMarker = createPathComponent(function createCircleMarker({\n  center,\n  children: _c,\n  ...options\n}, ctx) {\n  const instance = new LeafletCircleMarker(center, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, updateCircle);","import { MapContainer, TileLayer, CircleMarker } from 'react-leaflet';\nimport L from 'leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport 'react-leaflet-markercluster/dist/styles.min.css';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nfunction getRandomLatLng() {\n  return [-40 + 120 * Math.random(), -180 + 360 * Math.random()];\n}\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer\n      preferCanvas={true}\n      className=\"markercluster-map\"\n      center={center}\n      zoom={2}\n    >\n\n      <TileLayer {...tileLayer} />\n\n      <MarkerClusterGroup\n        spiderfyDistanceMultiplier={1}\n        showCoverageOnHover={true}\n      >\n\n        {[...Array(60000)].map((_, i) =>\n          <CircleMarker\n            renderer={L.canvas({ padding: 0.5 })}\n            key={i}\n            center={getRandomLatLng()}\n          />\n        )}\n      </MarkerClusterGroup>\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","import VectorTileLayer from 'react-leaflet-vector-tile-layer';\n\nconst tileLayer = {\n  //attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: \"http://localhost:8080/data/v3/{z}/{x}/{y}.pbf\"\n}\n\nexport default tileLayer;\n\n\n"],"sourceRoot":""}