{"version":3,"sources":["../node_modules/react-leaflet/esm/hooks.js","pages/coordinates-of-the-center-of-the-visible-map.js","util/tileLayer.js"],"names":["useMap","useLeafletContext","map","useMapEvent","type","handler","useEffect","on","off","center","GetCoordinates","legend","L","control","position","div","DomUtil","create","onAdd","getCenter","lat","lng","zoom","getZoom","DomEvent","disableClickPropagation","innerHTML","toFixed","addTo","MapWrapper","className","scrollWheelZoom","tileLayer","url"],"mappings":"uHAAA,uFAEO,SAASA,IACd,OAAOC,cAAoBC,IAEtB,SAASC,EAAYC,EAAMC,GAChC,IAAMH,EAAMF,IASZ,OARAM,qBAAU,WAGR,OADAJ,EAAIK,GAAGH,EAAMC,GACN,WAELH,EAAIM,IAAIJ,EAAMC,MAEf,CAACH,EAAKE,EAAMC,IACRH,I,qHCVHO,EAAS,CAAC,SAAU,UAEpBC,EAAiB,WACrB,IAAMR,EAAMF,cA+BZ,OA5BAM,qBAAU,WACR,GAAKJ,EAAL,CAEA,IAAMS,EAASC,IAAEC,QAAQ,CAAEC,SAAU,eAE/BC,EAAMH,IAAEI,QAAQC,OAAO,MAAO,UAEpCN,EAAOO,MAAQ,WACb,MAAqBhB,EAAIiB,YAAjBC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACPC,EAAOpB,EAAIqB,UAMjB,OAJAX,IAAEY,SAASC,wBAAwBV,GAEnCA,EAAIW,UAAJ,kBAA2BN,EAAIO,QAAQ,GAAvC,aAA8CN,EAAIM,QAAQ,GAA1D,oBAAwEL,GAEjEP,GAGTJ,EAAOiB,MAAM1B,GAEbA,EAAIK,GAAG,mBAAmB,WACxB,MAAqBL,EAAIiB,YAAjBC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACPC,EAAOpB,EAAIqB,UACjBR,EAAIW,UAAJ,kBAA2BN,EAAIO,QAAQ,GAAvC,aAA8CN,EAAIM,QAAQ,GAA1D,oBAAwEL,SAGzE,CAACpB,IAEG,MAoBM2B,UAjBI,WACjB,OACE,eAAC,IAAD,CACEC,UAAW,gBACXrB,OAAQA,EACRa,KAAM,GACNS,iBAAiB,EAJnB,UAOE,cAAC,IAAD,eAAeC,MAEf,cAACtB,EAAD,S,gCCrDN,MAOesB,IALG,CAEhBC,IAAK","file":"static/js/coordinates-of-the-center-of-the-visible-map-js.256592ce.chunk.js","sourcesContent":["import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","import { useEffect } from 'react';\nimport { MapContainer, TileLayer, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport tileLayer from '../util/tileLayer';\n\nconst center = [52.22977, 21.01178];\n\nconst GetCoordinates = () => {\n  const map = useMap();\n\n\n  useEffect(() => {\n    if (!map) return;\n\n    const legend = L.control({ position: \"bottomleft\" });\n\n    const div = L.DomUtil.create(\"div\", \"legend\");\n\n    legend.onAdd = () => {\n      const { lat, lng } = map.getCenter();\n      const zoom = map.getZoom();\n\n      L.DomEvent.disableClickPropagation(div);\n\n      div.innerHTML = `center: ${lat.toFixed(5)}, ${lng.toFixed(5)} | zoom: ${zoom}`;\n\n      return div;\n    };\n\n    legend.addTo(map);\n\n    map.on('dragend zoomend', () => {\n      const { lat, lng } = map.getCenter();\n      const zoom = map.getZoom();\n      div.innerHTML = `center: ${lat.toFixed(5)}, ${lng.toFixed(5)} | zoom: ${zoom}`;\n    })\n\n  }, [map]);\n\n  return null;\n}\n\nconst MapWrapper = () => {\n  return (\n    <MapContainer\n      className={'center-of-map'}\n      center={center}\n      zoom={18}\n      scrollWheelZoom={false}\n    >\n\n      <TileLayer {...tileLayer} />\n\n      <GetCoordinates />\n\n    </MapContainer>\n  )\n}\n\nexport default MapWrapper;","import VectorTileLayer from 'react-leaflet-vector-tile-layer';\n\nconst tileLayer = {\n  //attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: \"http://localhost:8080/data/v3/{z}/{x}/{y}.pbf\"\n}\n\nexport default tileLayer;\n\n\n"],"sourceRoot":""}