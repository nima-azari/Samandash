{"version":3,"sources":["../node_modules/react-leaflet/esm/hooks.js","pages/back-to-home-button.js","util/tileLayer.js"],"names":["useMap","useLeafletContext","map","useMapEvent","type","handler","useEffect","on","off","center","HomeButton","dragend","getCenter","latD","lat","lngD","lng","checkEqualArrays","toFixed","document","body","classList","customControler","L","Control","extend","options","position","onAdd","btn","DomUtil","create","title","innerHTML","onclick","flyToBounds","remove","addControl","info","textContent","MapWrapper","useState","setMap","whenCreated","zoom","scrollWheelZoom","tileLayer","url"],"mappings":"sHAAA,uFAEO,SAASA,IACd,OAAOC,cAAoBC,IAEtB,SAASC,EAAYC,EAAMC,GAChC,IAAMH,EAAMF,IASZ,OARAM,qBAAU,WAGR,OADAJ,EAAIK,GAAGH,EAAMC,GACN,WAELH,EAAIM,IAAIJ,EAAMC,MAEf,CAACH,EAAKE,EAAMC,IACRH,I,4HCVHO,EAAS,CAAC,SAAU,UAEpBC,EAAa,SAAC,GAAa,IAAXR,EAAU,EAAVA,IAuDpB,OAtDAC,YAAY,CACVQ,QADU,WAER,MAAiCT,EAAIU,YAAxBC,EAAb,EAAQC,IAAgBC,EAAxB,EAAmBC,IACnB,EAAqBd,EAAIU,YAEnBK,EACJ,CAHF,EAAQH,IAAR,EAAaE,OAGI,CAAmB,EAAlBH,EAAKK,QAAQ,GAA0B,EAAlBH,EAAKG,QAAQ,IAEpDC,SAASC,KAAKC,UAAUJ,EAAmB,MAAQ,UACjD,uBAKNX,qBAAU,WACR,GAAKJ,EAAL,CAEA,IAAMoB,EAAkBC,IAAEC,QAAQC,OAAO,CACvCC,QAAS,CACPC,SAAU,WAGZC,MAAO,WACL,IAAMC,EAAMN,IAAEO,QAAQC,OAAO,SAAU,gBAUvC,OATAF,EAAIG,MAAQ,2BACZH,EAAII,UACF,2KAEFJ,EAAIK,QAAU,WACZhC,EAAIiC,YAAY,CAAC1B,IACjBU,SAASC,KAAKC,UAAUe,OAAO,qBAG1BP,KAIX3B,EAAImC,WAAW,IAAIf,GAEnB,IAAMgB,EAAOf,IAAEC,QAAQC,OAAO,CAC5BC,QAAS,CACPC,SAAU,cAGZC,MAAO,WACL,IAAMU,EAAOf,IAAEO,QAAQC,OAAO,MAAO,UAErC,OADAO,EAAKC,YAAc,eACZD,KAIXpC,EAAImC,WAAW,IAAIC,MAClB,CAACpC,IAEG,MAoBMsC,UAjBI,WACjB,MAAsBC,mBAAS,MAA/B,mBAAOvC,EAAP,KAAYwC,EAAZ,KAEA,OACE,eAAC,IAAD,CACEC,YAAaD,EACbjC,OAAQA,EACRmC,KAAM,GACNC,iBAAiB,EAJnB,UAME,cAAC,IAAD,eAAeC,MAEf,cAACpC,EAAD,CAAYR,IAAKA,S,gCC7EvB,MAOe4C,IALG,CAEhBC,IAAK","file":"static/js/back-to-home-button-js.b398dff6.chunk.js","sourcesContent":["import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","import { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, useMapEvent } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport tileLayer from \"../util/tileLayer\";\n\nconst center = [52.22977, 21.01178];\n\nconst HomeButton = ({ map }) => {\n  useMapEvent({\n    dragend() {\n      const { lat: latD, lng: lngD } = map.getCenter();\n      const { lat, lng } = map.getCenter();\n\n      const checkEqualArrays =\n        [lat, lng] !== [latD.toFixed(5) * 1, lngD.toFixed(5) * 1];\n\n      document.body.classList[checkEqualArrays ? \"add\" : \"remove\"](\n        \"show-button-home\"\n      );\n    },\n  });\n\n  useEffect(() => {\n    if (!map) return;\n\n    const customControler = L.Control.extend({\n      options: {\n        position: \"topleft\",\n      },\n\n      onAdd: function () {\n        const btn = L.DomUtil.create(\"button\", \"back-to-home\");\n        btn.title = \"pooooooooooooop rotation\";\n        btn.innerHTML =\n          '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M32 18.451L16 6.031 0 18.451v-5.064L16 .967l16 12.42zM28 18v12h-8v-8h-8v8H4V18l12-9z\"></path></svg>';\n\n        btn.onclick = function () {\n          map.flyToBounds([center]);\n          document.body.classList.remove(\"show-button-home\");\n        };\n\n        return btn;\n      },\n    });\n\n    map.addControl(new customControler());\n\n    const info = L.Control.extend({\n      options: {\n        position: \"bottomleft\",\n      },\n\n      onAdd: function () {\n        const info = L.DomUtil.create(\"div\", \"legend\");\n        info.textContent = \"move the map\";\n        return info;\n      },\n    });\n\n    map.addControl(new info());\n  }, [map]);\n\n  return null;\n};\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState(null);\n\n  return (\n    <MapContainer\n      whenCreated={setMap}\n      center={center}\n      zoom={18}\n      scrollWheelZoom={false}\n    >\n      <TileLayer {...tileLayer} />\n\n      <HomeButton map={map} />\n    </MapContainer>\n  );\n};\n\nexport default MapWrapper;\n","import VectorTileLayer from 'react-leaflet-vector-tile-layer';\n\nconst tileLayer = {\n  //attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: \"http://localhost:8080/data/v3/{z}/{x}/{y}.pbf\"\n}\n\nexport default tileLayer;\n\n\n"],"sourceRoot":""}